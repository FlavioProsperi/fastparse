@import Main._

@val tests = wd/'fastparse/'shared/'src/'test/'scala/'fastparse
@val main = wd/'fastparse/'shared/'src/'main/'scala/'fastparse

@hl.ref(tests/"MathTests.scala", "val number", "val tests")
@hl.ref(tests/"MathTests.scala", Seq("def check", "check"))
@div(id := "splashdiv")
@script(raw("""demo.DemoMain().math(document.getElementById("splashdiv"))"""))
@p
    FastParse is a parser-combinator library for Scala that lets you quickly and easily write recursive descent parsers in Scala. Features include:

@ul
    @li
        Up to 1/5 the speed of a hand-written parser, 100x faster than @a("scala-parser-combinators", href:="https://github.com/scala/scala-parser-combinators"), comparable (though slightly slower than) @a("Parboiled2", href:="https://github.com/sirthias/parboiled2")
    @li
        1/10th the size of a hand-written parser
    @li
        Automatic, excellent error-reporting and diagnostics.
    @li
        Zero allocations during a parse
    @li
        Compatible with both Scala-JVM and Scala.js
@p
     The following sections will introduce you to FastParse and how to use it. You can also watch this talk:
@iframe(
    src:="https://player.vimeo.com/video/142341803",
    "width".attr:="800",
    "height".attr:="450",
    marginLeft.auto,
    marginRight.auto,
    display.block,
    "frameborder".attr:="0",
    "webkitallowfullscreen".attr:=1,
    "mozallowfullscreen".attr:=1,
    "allowfullscreen".attr:= 1
)
@p
    Which will give you a quick 1-hour tour of how to use FastParse, the motivation behind the library, and how it fits into the bigger picture of how programmers parse unstructured text.

@sect{Getting Started}
    @p
        To begin using FastParse, add

    @hl.scala
        "com.lihaoyi" %% "fastparse" % "@fastparse.Constants.version"

    @p
        To your SBT configuration. To use with Scala.js, you'll need
    @hl.scala
        "com.lihaoyi" %%% "fastparse" % "@fastparse.Constants.version"

